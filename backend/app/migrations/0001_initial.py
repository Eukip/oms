# Generated by Django 3.1.7 on 2021-03-24 09:10

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=128, unique=True)),
                ('role', models.IntegerField(choices=[(1, 'Администратор'), (2, 'Специалист сектора платежных карт и эквайринга'), (3, 'Оператор колл-центра'), (4, 'Курьер')], default=1)),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(default='')),
                ('city', models.CharField(default='', max_length=32)),
                ('longitude', models.CharField(default='', max_length=32)),
                ('latitude', models.CharField(default='', max_length=32)),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы',
                'db_table': 'branch',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=64, verbose_name='Имя')),
                ('lastname', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('middlename', models.CharField(default='', max_length=64, verbose_name='Отечество')),
                ('fullname', models.CharField(max_length=128, verbose_name='Фамилия и имя латиницей')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('phone2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('phone3', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('email', models.CharField(max_length=100, verbose_name='Электронная почта')),
                ('birthdate', models.DateField(verbose_name='Дата рождения')),
                ('image_front', models.ImageField(upload_to='images', verbose_name='Фото лицевой стороны паспорта')),
                ('image_back', models.ImageField(upload_to='images', verbose_name='Фото тыльной стороны паспорта')),
                ('citizenship', models.CharField(max_length=100, verbose_name='Гражданство')),
                ('serial_number', models.CharField(max_length=50, verbose_name='Серия и номер паспорта')),
                ('inn', models.CharField(max_length=50, verbose_name='ИНН')),
                ('workplace', models.CharField(max_length=100, verbose_name='Место работы')),
                ('formal_address', models.TextField(verbose_name='Адрес по прописке')),
                ('address', models.TextField(verbose_name='Адрес фактического проживания')),
                ('city', models.CharField(max_length=100, verbose_name='Город доставки')),
                ('source', models.CharField(default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('status', django_fsm.FSMIntegerField(choices=[(0, 'Новая заявка'), (1, 'Заявка в обработке'), (2, 'Отменен'), (3, 'Заявка подтверждена '), (10, 'Заявка возвращена в колл-центр'), (11, 'Отправлено на выпуск'), (12, 'Карта напечетана, выдано на доставку'), (20, 'Карта принята на доставку'), (21, 'Доставка отменена'), (22, 'Карта не доставлена'), (23, 'Карта доставлена')], default=0, verbose_name='Статус')),
                ('return_reason', models.TextField(default='', verbose_name='Причина возврата')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='StatusHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.SmallIntegerField(choices=[(0, 'Новая заявка'), (1, 'Заявка в обработке'), (2, 'Отменен'), (3, 'Заявка подтверждена '), (10, 'Заявка возвращена в колл-центр'), (11, 'Отправлено на выпуск'), (12, 'Карта напечетана, выдано на доставку'), (20, 'Карта принята на доставку'), (21, 'Доставка отменена'), (22, 'Карта не доставлена'), (23, 'Карта доставлена')])),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.order')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'status_history',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='branch',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.branch'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
